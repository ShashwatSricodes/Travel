import React from 'react';
import { Share2, Download, Edit3, Link } from 'lucide-react';
import { useAuth } from '../Auth/useAuth';

interface ActionButtonsProps {
  tripId?: string;
  tripTitle?: string;
}

const ActionButtons: React.FC<ActionButtonsProps> = ({ tripId, tripTitle = "My Trip" }) => {
  const { isAuthenticated } = useAuth();

  const handleShare = async () => {
    const shareUrl = `${window.location.origin}/final-itinerary/${tripId}`;
    
    if (navigator.share) {
      try {
        await navigator.share({
          title: tripTitle,
          text: `Check out this amazing travel itinerary: ${tripTitle}`,
          url: shareUrl,
        });
      } catch (error) {
        console.log('Error sharing:', error);
        copyToClipboard(shareUrl);
      }
    } else {
      copyToClipboard(shareUrl);
    }
  };

  const copyToClipboard = async (text: string) => {
    try {
      await navigator.clipboard.writeText(text);
      // Show a toast notification
      const toast = document.createElement('div');
      toast.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50';
      toast.textContent = 'Link copied to clipboard!';
      document.body.appendChild(toast);
      setTimeout(() => {
        document.body.removeChild(toast);
      }, 3000);
    } catch (error) {
      console.error('Failed to copy:', error);
      alert('Failed to copy link. Please copy the URL manually.');
    }
  };

  const handleDownloadPDF = () => {
    // Create a print-friendly version
    const printContent = `
      <!DOCTYPE html>
      <html>
        <head>
          <title>${tripTitle} - Itinerary</title>
          <style>
            body { 
              font-family: Arial, sans-serif; 
              margin: 20px; 
              line-height: 1.6;
              color: #333;
            }
            .header { 
              text-align: center; 
              margin-bottom: 30px; 
              border-bottom: 2px solid #6ECE9D;
              padding-bottom: 20px;
            }
            .header h1 {
              color: #6ECE9D;
              margin-bottom: 10px;
            }
            .section { 
              margin-bottom: 25px; 
              page-break-inside: avoid;
            }
            .section h2 {
              color: #333;
              border-left: 4px solid #6ECE9D;
              padding-left: 15px;
              margin-bottom: 15px;
            }
            .day { 
              margin-bottom: 20px; 
              padding: 15px; 
              border-left: 3px solid #6ECE9D;
              background-color: #f9f9f9;
            }
            .activity {
              margin-bottom: 15px;
              padding: 10px;
              border: 1px solid #ddd;
              border-radius: 5px;
            }
            .activity-time {
              font-weight: bold;
              color: #6ECE9D;
            }
            .cost {
              color: #28a745;
              font-weight: bold;
            }
            @media print {
              body { margin: 0; }
              .no-print { display: none; }
            }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>${tripTitle}</h1>
            <p>Generated by Evora - Plan. Share. Inspire.</p>
            <p>Visit: ${window.location.origin}</p>
          </div>
          ${document.querySelector('.container')?.innerHTML || ''}
          <div style="margin-top: 30px; text-align: center; color: #666; font-size: 12px;">
            <p>This itinerary was created with Evora. Create your own at ${window.location.origin}</p>
          </div>
        </body>
      </html>
    `;

    const printWindow = window.open('', '_blank');
    if (printWindow) {
      printWindow.document.write(printContent);
      printWindow.document.close();
      
      printWindow.onload = function() {
        printWindow.print();
        setTimeout(() => {
          printWindow.close();
        }, 1000);
      };
    }
  };

  const handleEdit = () => {
    if (!isAuthenticated) {
      alert('Please sign in to edit trips.');
      return;
    }
    // Navigate to edit mode (you can implement this based on your routing)
    window.location.href = '/create-trip';
  };

  return (
    <div className="flex flex-col sm:flex-row gap-4 justify-center">
      <button 
        onClick={handleShare}
        className="flex items-center justify-center gap-2 px-8 py-3 bg-[#6ECE9D] text-black font-medium rounded-lg hover:bg-[#6ECE9D]/90 transition-colors"
      >
        <Share2 className="w-4 h-4" />
        Share Itinerary
      </button>
      
      <button 
        onClick={handleDownloadPDF}
        className="flex items-center justify-center gap-2 px-8 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors"
      >
        <Download className="w-4 h-4" />
        Download PDF
      </button>
      
      {isAuthenticated && (
        <button 
          onClick={handleEdit}
          className="flex items-center justify-center gap-2 px-8 py-3 bg-gray-100 text-gray-700 font-medium rounded-lg hover:bg-gray-200 transition-colors"
        >
          <Edit3 className="w-4 h-4" />
          Create New Trip
        </button>
      )}
    </div>
  );
};

export default ActionButtons;